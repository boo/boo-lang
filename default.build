<?xml version="1.0"?>
<project name="boo" default="all">

	<property name="antlr.home" value="lib/antlr-2.7.4" />
	<property name="java" value="java" />
	
	<property name="antlr.jar" value="${antlr.home}/antlr.jar" />
	<property name="antlr.runtime.dll" value="${antlr.home}/lib/csharp/src/bin/antlr.runtime.dll" />
	
	<target name="all" depends="MetaBoo">
	</target>

	<target name="Boo" depends="satellites">

		<resgen
			input="src/Boo/Resources/strings.txt"
			output="build/strings.resources" />

		<csc
			target="library"
			output="build/Boo.dll"
			debug="true">

			<sources basedir="src/Boo">
				<includes name="**/*.cs" />
			</sources>
			
			<resources basedir="build">
				<includes name="strings.resources" />
			</resources>
		</csc>
	</target>
	
	<target name="MetaBoo" depends="Boo, generate-ast">
		<booc
			target="library"
			output="build/MetaBoo.dll">
			
			<sources basedir="src/MetaBoo">
				<includes name="**/*.boo" />
			</sources>
		</booc>
	</target>
	
	<target name="Boo.AntlrParser" depends="MetaBoo, compile-grammar">
		<csc target="library" output="build/Boo.AntlrParser.dll"
			debug="${debug}" optimize="${optimize}">
			<sources basedir="src/Boo.AntlrParser">
				<includes name="**/*.cs" />
			</sources>
			<references>
				<includes name="build/Boo.dll" />
				<includes name="build/Boo.Lang.Compiler.dll" />
				<includes name="build/antlr.runtime.dll" />
			</references>
		</csc>
	</target>
	
	<target name="satellites" depends="init">
		<mkdir dir="build/pt" />

		<resgen
			input="src/Boo/Resources/pt/strings.txt"
			output="build/pt/strings.pt.resources" />

		<al target="lib" culture="pt" output="build/pt/Boo.resources.dll">
			<sources basedir="build/pt">
				<includes name="strings.pt.resources" />
			</sources>
		</al>
	</target>

	<target name="compile-grammar" depends="init">

		<if test="${not file::up-to-date('src/Boo.AntlrParser/boo.g', 'src/Boo.AntlrParser/BooParserBase.cs')}">
		
			<delete>
				<fileset basedir="src/Boo.AntlrParser">
					<includes name="*TokenTypes.*" />
				</fileset>
			</delete>			 
			
			<exec program="${java}" failonerror="true">
				<arg value="-cp" />
				<arg value="${antlr.jar}" />
				<arg value="antlr.Tool" />
				<arg value="-o" />
				<arg value="src/Boo.AntlrParser/" />
				<arg value="src/Boo.AntlrParser/boo.g" />
			</exec>
			
			<exec program="${java}" failonerror="true">
				<arg value="-cp" />
				<arg value="${antlr.jar}" />
				<arg value="antlr.Tool" />
				<arg value="-o" />
				<arg value="src/Boo.AntlrParser/" />
				<arg value="src/Boo.AntlrParser/booel.g" />
			</exec>
			
			<touch file="src/Boo.AntlrParser/BooParserBase.cs" />
		</if>
	</target>
	
	<target name="generate-ast" depends="init">
		<if test="${not file::up-to-date('ast.model.boo', 'src/MetaBoo/Ast/Impl/CompileUnitImpl.boo')}">
		
			<delete dir="src/MetaBoo/Ast/Impl"
					if="${directory::exists('src/MetaBoo/Ast/Impl')}" />
			<mkdir dir="src/MetaBoo/Ast/Impl" />
			<exec program="bin/booi.exe" useruntimeengine="true">
				<arg value="scripts/astgen.boo" />
			</exec>			
		</if>
	</target>

	<target name="rebuild" depends="clean">
		
		<touch file="ast.model.boo" />
		<touch file="src/Boo.AntlrParser/boo.g" />
		<touch file="src/Boo.AntlrParser/booel.g" />
		
		<call target="all" />		
	</target>
	
	<target name="clean">
		<delete dir="build" failonerror="false" />
	</target>

	<target name="init">
		<mkdir dir="build" />
		<copy file="${antlr.runtime.dll}" todir="build" />		
		<loadtasks assembly="bin/Boo.NAnt.dll" />
	</target>

</project>

<?xml version="1.0"?>
<project name="booxw" default="compile">

	<property name="extras.dir" value="${path::get-full-path('../..')}" />
	<include buildfile="${extras.dir}/common-properties.build" />
	
	<property name="build.dir" value="${path::get-full-path('../build')}" />

	<target name="run" depends="compile">
		<exec program="${build.dir}/booxw.exe" useruntimeengine="true">
		</exec>
	</target>
	
	<target name="get-svn-revision" depends="init">
		<boo>
		<![CDATA[
		
		revision = /Revision:\s+(\d+)/.Match(shell("svn", "info")).Groups[1].Value
		Project.Properties["svn.revision"] = revision
		
		]]>
		</boo>
	</target>
	
	<target name="distro" depends="compile, get-svn-revision">
		<copy todir="${build.dir}">
			<fileset basedir="..">
				<include name="COPYING" />
				<include name="README.TXT" />
			</fileset>
		</copy>
		
		<zip zipfile="booxw-${svn.revision}-bin.zip">
			<fileset basedir="${build.dir}">
				<include name="COPYING" />
				<include name="README.TXT" />
				<include name="*.dll" />
				<include name="boo.xshd" />
				<include name="booxw.exe" />
				<include name="booish.gui.exe" />
				<include name="scripts/*.int" />
			</fileset>
		</zip>
	</target>
	
	<target name="copy-scripts" depends="init">
		<copy todir="${build.dir}/scripts">
			<fileset basedir="scripts">
				<include name="*.int" />
			</fileset>
		</copy>
	</target>
	
	<target name="compile" depends="create-resources, copy-scripts">
	
		<property name="booish.gui" value="${path::get-full-path('../../booish.gui')}" />
		
		<nant buildfile="${booish.gui}/default.build" target="build" />
		
		<copy todir="${build.dir}">
			<fileset basedir="${booish.gui}/build">
				<include name="booish.gui.exe" />
			</fileset>
		</copy>
	
		<booc
			output="${build.dir}/booxw.exe"
			target="winexe"
			tracelevel="Info">
			<sources basedir="src">
				<include name="*.boo" />
			</sources> 
			
			<resources basedir="${build.dir}">
				<include name="*.resources" />			
			</resources>
			
			<references basedir="${build.dir}">
				<include name="Boo.Lang.Interpreter.dll" />
				<include name="booish.gui.exe" />
				<include name="ICSharpCode.TextEditor.dll" />
				<include name="WeifenLuo.WinFormsUI.dll" />
				<include name="System.Windows.Forms.dll" />
				<include name="System.Drawing.dll" />
				<include name="System.Xml.dll" />
				<include name="BooExplorer.Common.dll" />
			</references>
		</booc>
	</target>
	
	<target name="create-resources" depends="init">
		<boo>
		import System.IO
		import System.Resources
		import System.Windows.Forms from System.Windows.Forms
		import System.Drawing from System.Drawing
		
		def MapPath(path):
			return Path.Combine(Project.BaseDirectory, path)
					
		def CreateImageList():
			imageList = ImageList()
			images = (
					"namespace.png",
					"class.png",
					"interface.png",
					"enum.png",
					"field.png",
					"property.png",
					"method.png",
					"internalclass.png",
					"internalinterface.png",
					"internalenum.png",
					"internalfield.png",
					"internalproperty.png",
					"internalmethod.png",
					"protectedclass.png",
					"protectedinterface.png",
					"protectedenum.png",
					"protectedfield.png",
					"protectedproperty.png",
					"protectedmethod.png",
					"privateclass.png",
					"privateinterface.png",
					"privateenum.png",
					"privatefield.png",
					"privateproperty.png",
					"privatemethod.png",
					"event.png"
				)
			for image in images:
				fname = MapPath("../resources/ClassBrowserIcons/${image}")
				imageList.Images.Add(Image.FromFile(fname))
			return imageList
		
		using writer=ResourceWriter(MapPath("../build/BooExplorer.DocumentOutline.resources")):
			using imageList=CreateImageList():			
				writer.AddResource("_imageList", imageList.ImageStream)
		using writer=ResourceWriter(MapPath("../build/BooExplorer.MainForm.resources")):
			writer.AddResource("_icon", Icon(MapPath("../resources/boo.ico"))) 
		</boo>
	</target>
	
	<target name="init">
		
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/scripts" />
		<copy todir="${build.dir}" file="../../SharpDevelop/BooBinding/boo.xshd" />
		<copy todir="${build.dir}">
			<fileset basedir="${sharpdevelop.dir}/bin">
				<include name="ICSharpCode.TextEditor.dll" />				
				<include name="WeifenLuo.WinFormsUI.dll" />
			</fileset>
		</copy>
		
		<loadtasks assembly="${boo.dir}/Boo.NAnt.Tasks.dll" />
	</target>

</project>

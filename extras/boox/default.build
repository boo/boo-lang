<?xml version="1.0"?>
<project name="Boo Explorer" default="run">

	<property name="extras.dir" value="${path::get-full-path('..')}" />
	<include buildfile="${extras.dir}/common-properties.build" />
	
	<target name="run" depends="build">
		<exec program="build/${boox}.exe" useruntimeengine="true">
		</exec>
	</target>
	
	<target name="create-booxg-resources" depends="init">
		<boo>
		import System.IO
		import System.Resources
		import Gdk from "gdk-sharp"
		import Gtk from "gtk-sharp"
		
		def MapPath(path):
			return Path.Combine(Project.BaseDirectory, path)
			
		def GetBytes(fname as string):
			using stream=File.OpenRead(fname):
				buffer = array(byte, stream.Length)
				stream.Read(buffer, 0, stream.Length)
				return buffer
		
		using writer=ResourceWriter(MapPath("build/BooExplorer.resources")):
			for fname in Directory.GetFiles(MapPath("resources/ClassBrowserIcons"), "*.png"):
				print Path.GetFileNameWithoutExtension(fname)
				writer.AddResource(Path.GetFileNameWithoutExtension(fname), GetBytes(fname))
		</boo>
	</target>


	<target name="booxg" depends="create-booxg-resources">
		<booc target="exe" output="build/booxg.exe">
			<sources basedir="booxg">
				<include name="*.boo" />
			</sources>
			<resources basedir="build">
				<include name="BooExplorer.resources" />
			</resources>
			<references basedir="build">
				<include name="BooExplorer.Common.dll" />
				<include name="gtk-sharp.dll" />
				<include name="gdk-sharp.dll" />
				<include name="pango-sharp.dll" />
				<include name="gtksourceview-sharp.dll" />
				<include name="Boo.Lang.Useful.dll" />
				<include name="Boo.Lang.Interpreter.dll" />
			</references>
		</booc>
	</target>
	
	<target name="booxw" depends="BooExplorer.Common">
		<nant buildfile="booxw/default.build" />
	</target>
	
	<target name="BooExplorer.Common" depends="init">
		<booc target="library" output="build/BooExplorer.Common.dll">
			<sources basedir="BooExplorer.Common">
				<include name="*.boo" />
			</sources>
		</booc>
	</target>
	
	<target name="rebuild" depends="clean, build">
	</target>
	
	<target name="build" depends="select-platform">
		<call target="${boox}" />
	</target>

	<target name="select-platform">
		<property name="boox" value="booxg" unless="${nant.platform.win32}" />
		<property name="boox" value="booxw" if="${nant.platform.win32}" />
	</target>

	<target name="init">
		<mkdir dir="build" unless="${directory::exists('build')}" />
		<copy todir="build">
			<fileset basedir="${boo.dir}">
				<include name="Boo.Lang.dll" />
				<include name="Boo.Lang.Useful.dll" />
				<include name="Boo.Lang.Compiler.dll" />
				<include name="Boo.Lang.Parser.dll" />
				<include name="Boo.Lang.Interpreter.dll" />
			</fileset>
		</copy>
		<loadtasks assembly="${boo.dir}/Boo.NAnt.Tasks.dll" />
	</target>
	
	<target name="clean">
		<delete dir="build" if="${directory::exists('build')}" />
	</target>
</project>

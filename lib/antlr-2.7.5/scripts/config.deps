## --*- Makefile -*--
## Make listed targets even in case a file with same name exists.
.PHONY: \
 this \
 all clean install test distclean \
 this-all this-clean this-install this-test this-distclean \
 all-this clean-this install-this test-this distclean-this \
 $(eof)

## delete suffix rules - shortens output when using -d and is not
## used anyway (and should not be used).
.SUFFIXES:

Makefile :: /home/rodrigob/java/antlr-2.7.5/scripts/../$(subdir)/Makefile.in  \
            /home/rodrigob/java/antlr-2.7.5/scripts/config.deps \
					  /home/rodrigob/java/antlr-2.7.5/scripts/config.make \
					  /home/rodrigob/java/antlr-2.7.5/scripts/config.vars \
            /home/rodrigob/java/antlr-2.7.5/config.status
	@echo "*** update $(subdir)/Makefile"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES="$(subdir)/Makefile" /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/config.deps : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/config.deps.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/config.deps /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/config.make : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/config.make.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/config.make /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/config.vars : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/config.vars.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/config.vars /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/config.status : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../configure
	@echo "*** reconfigure $@ - stay tuned .."
	@cd /home/rodrigob/java/antlr-2.7.5 && /bin/sh ./config.status -q --recheck
	@echo "*** update all configured files .."
	@cd /home/rodrigob/java/antlr-2.7.5 && /bin/sh ./config.status -q

### In a pure devel mode there should be also a dependency listed on how
### to make configure out of  configure.in.  This  requires that usr has 
### m4  and  autoconf (proper version) installed. Appropriate checks are 
### not done in configure. If so, then uncomment next lines:
###
###   @rule_configure_configure_in@
###

/home/rodrigob/java/antlr-2.7.5/scripts/antlr.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/antlr.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/antlr.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/cpp.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/cpp.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/cpp.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/csc.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/csc.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/csc.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/cxx.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/cxx.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/cxx.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/jar.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/jar.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/jar.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/javac.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/javac.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/javac.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/java.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/java.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/java.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/lib.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/lib.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/lib.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/link.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/link.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/link.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/pyinst.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/pyinst.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/pyinst.sh /bin/sh ./config.status -q

/home/rodrigob/java/antlr-2.7.5/scripts/python.sh : \
	/home/rodrigob/java/antlr-2.7.5/scripts/../scripts/python.sh.in
	@echo "*** update $@"
	@cd /home/rodrigob/java/antlr-2.7.5 && CONFIG_FILES=scripts/python.sh /bin/sh ./config.status -q


## This rule shall ensure that ANTLR_NET is up-to-date. The rule is a 
## double colon rule, ie. further  rules  with the same target may be
## added. For unknown reasons, double colon rules are always phony,ie.
## getting executed even in case target exists. We break the infinite
## loop,  we only  jump  into  subdir  "lib/csharp/src" if we are not 
## already in. It is very important that  each Makefile[.in] sets the
## variable $(subdir) proper.

/home/rodrigob/java/antlr-2.7.5/lib/antlr.runtime.dll :: 
	@ subdir="lib/csharp/src" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/home/rodrigob/java/antlr-2.7.5/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         $(MAKE) -C "$$d" $@ ; \
        } 	\
        ;; \
    esac

/home/rodrigob/java/antlr-2.7.5/lib/antlr.astframe.dll :: 
	@ subdir="lib/csharp/ASTFrame" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/home/rodrigob/java/antlr-2.7.5/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         $(MAKE) -C "$$d" $@ ; \
        } 	\
        ;; \
    esac


/home/rodrigob/java/antlr-2.7.5/antlr/antlr.jar ::
	@ subdir="antlr" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/home/rodrigob/java/antlr-2.7.5/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         $(MAKE) -C "$$d" $@ ; \
        } 	\
        ;; \
    esac


/home/rodrigob/java/antlr-2.7.5/lib/cpp/src/libantlr.a ::
	@ subdir="lib/cpp/src" ; \
    case $(subdir) in \
	  $$subdir ) ;; \
	  * ) d="/home/rodrigob/java/antlr-2.7.5/$$subdir" ; \
        test -f "$$d/Makefile" && {  \
         $(MAKE) -C "$$d" $@ ; \
        } 	\
        ;; \
    esac


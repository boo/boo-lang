<?xml version="1.0"?>
<project name="tests" default="run">

	<include buildfile="nunit.inc" />	

	<target name="run" depends="compile" if="${nant.tasks.nunit2}">

		<nunit2>       
			<formatter type="Plain" />
			<test>
				<assemblies basedir="build">
					<include name="Boo.AntlrParser.Tests.dll" />
					<include name="Boo.Tests.dll" />
					<include name="Boo.Lang.Compiler.Tests.dll" />
					<include name="BooCompiler.Tests.dll" />					
					<include name="BooCompilerResources.Tests.dll" />					
					<include name="Regression.Tests.dll" />
					<include name="Booish.Tests.dll" />
				</assemblies>
			</test>
		</nunit2>
		
	</target>
	
	<target name="compile" depends="init">	
	
		<boo src="generate_regression.boo" />
		
		<booc 
			target="library"
			output="build/BooModules.dll">
			
			<sources basedir="BooModules">
				<include name="*.boo" />
			</sources>
		</booc>
		
		<csc
			target="library"
			output="build/BooCompiler.Tests.dll">
			
			<sources>
				<include name="BooCompiler.Tests/**/*.cs" />
				<include name="build/RegressionTestFixture.cs" />
				<include name="build/CompilerErrorsTestFixture.cs" />
				<include name="build/CompilerWarningsTestFixture.cs" />
				<include name="build/IntegrationTestFixture.cs" />
				<include name="build/StdlibTestFixture.cs" />
				<include name="build/AttributesTestFixture.cs" />
				<include name="build/SemanticsTestFixture.cs" />
				<include name="build/MacrosTestFixture.cs" />
			</sources>
			
			<references basedir="build">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.dll" />
				<include name="Boo.Lang.Compiler.dll" />
				<include name="BooModules.dll" />
			</references>
		</csc>
	
		<booc
			target="library"
			output="build/Boo.Tests.dll">

			<sources basedir="Boo.Tests">
				<include name="**/*.boo" />
			</sources>

			<references>
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>
		
		<booc
			target="library"
			output="build/Boo.Lang.Compiler.Tests.dll">
			
			<sources basedir="Boo.Lang.Compiler.Tests">
				<include name="**/*.boo" />
			</sources>
			
			<references>
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>
		
		<booc
			target="library"
			output="build/BooCompilerResources.Tests.dll">
			
			<sources basedir="BooCompilerResources.Tests">
				<include name="**/*.boo" />
			</sources>
			
			<references>
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>		
		
		<booc
			target="library"
			output="build/Booish.Tests.dll">
			
			<sources basedir="Booish.Tests">
				<include name="**/*.boo" />
			</sources>
			
			<references basedir="build">
				<include name="booish.exe" />
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>
		
		<csc
			target="library"
			output="build/Boo.AntlrParser.Tests.dll">
			
			<sources>
				<include name="Boo.AntlrParser.Tests/**/*.cs" />
				<include name="build/ParserRoundtripTestFixture.cs" />
			</sources>
			
			<references basedir="build">
				<include name="${nunit.framework.dll}" />
				<include name="BooCompiler.Tests.dll" />
				<include name="Boo.Lang.Compiler.dll" />				
				<include name="Boo.AntlrParser.dll" />
				<include name="antlr.runtime.dll" />
			</references>			
		</csc>
	</target>
	
	<target name="init">
		<delete dir="build" if="${directory::exists('build')}" />
		<mkdir dir="build" />
		<copy todir="build">
			<fileset basedir="../build">
				<include name="booish.exe" />
				<include name="*.dll" />
				<include name="*.pdb" />
				<include name="pt/*.dll" />
			</fileset>
		</copy>
		<copy todir="build" file="${nunit.framework.dll}" />
		<loadtasks assembly="build/Boo.NAnt.dll" />
	</target>
</project>
